name: Build Workflow for Applications

on:
  workflow_call:
    inputs:
      build_app_script:
        description: 'Script to call to build the app'
        required: false
        default: './.github/scripts/build-app.sh'
        type: string
      build_dir:
        description: 'Directory where the build script saves its artifacts'
        required: true
        default: ''
        type: string
      cosign_blob_name:
        description: 'OCI blob artifact name for cosign upload'
        required: true
        type: string
      destination_registry:
        description: 'Destination Docker registry'
        required: false
        type: string
        default: 'ghcr.io'
      docker_build_image:
        description: 'Image to be used to build the app'
        required: true
        default: ''
        type: string
      docker_build_type:
        description: 'Type of Docker build'
        required: false
        default: 'buildx'
        type: string
    secrets:
      destination_registry_username:
        required: true
      destination_registry_password:
        required: true
      cosign_private_key:
        required: true
      cosign_private_key_password:
        required: true
      cosign_public_key:
        required: true

jobs:
  app-build:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.docker_build_image }}
      credentials:
        username: ${{secrets.destination_registry_username}}
        password: ${{secrets.destination_registry_password}}
    env:
      BUILD_APP_SCRIPT: ${{ inputs.build_app_script }}
      BUILD_DIR: ${{ inputs.build_dir }}
      DESTINATION_REGISTRY: ${{ inputs.destination_registry }}
      DESTINATION_REGISTRY_USERNAME: ${{secrets.destination_registry_username}}
      DESTINATION_REGISTRY_PASSWORD: ${{secrets.destination_registry_password}}
      DOCKER_BUILD_IMAGE: ${{ inputs.docker_build_image }}
      DOCKER_BUILD_TYPE: ${{ inputs.docker_build_type }}
      COSIGN_BLOB_NAME: ${{ inputs.cosign_blob_name }}
      COSIGN_PRIVATE_KEY: ${{secrets.cosign_private_key}}
      COSIGN_PUBLIC_KEY: ${{secrets.cosign_public_key}}
      COSIGN_PASSWORD: ${{secrets.cosign_private_key_password}}
    steps:
      # - name: Mark workspace directory as safe
      #   run: git config --global --add safe.directory ${GITHUB_WORKSPACE}
      #   shell: bash
      - name: Code checkout
        uses: actions/checkout@v3
      - name: Prepare
        id: prep
        shell: bash
        run: |
          GITHUB_SHA=${{github.sha}}
          GITHUB_REF=${{github.ref}}
          BLOB_TAG=${GITHUB_SHA::8}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            BLOB_TAG=${GITHUB_REF/refs\/tags\//}
          fi
          echo "BLOB_TAG=${BLOB_TAG}" >> $GITHUB_OUTPUT
      - name: Build application using provided script
        shell: bash
        run: |
          bash $BUILD_APP_SCRIPT
      - name: Login to destination registry
        shell: bash
        run: |
          docker login --username ${DESTINATION_REGISTRY_USERNAME} --password ${DESTINATION_REGISTRY_PASSWORD} ${DESTINATION_REGISTRY}
      - name: Upload and sign generated build artifacts as OCI blob using cosign
        shell: bash
        run: |
          BLOB_TAG=${{ steps.prep.outputs.BLOB_TAG }}
          tar cfz $BUILD_DIR.tar.gz $BUILD_DIR/
          export COSIGN_DOCKER_MEDIA_TYPES=1
          cosign upload blob -f $BUILD_DIR.tar.gz $DESTINATION_REGISTRY/$COSIGN_BLOB_NAME-$BUILD_DIR:$BLOB_TAG
          cosign sign --key env://COSIGN_PRIVATE_KEY $DESTINATION_REGISTRY/$COSIGN_BLOB_NAME-$BUILD_DIR:$BLOB_TAG
        # uses: actions/upload-artifact@v3
        # with:
        #   name: build-artifacts
        #   path: ${{env.BUILD_DIR}}
